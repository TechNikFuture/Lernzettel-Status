@font-face {
  font-family: Chirota_Regular;
  src: url(Chirota\ Regular.otf);
}

body {
  font-family: 'Chirota_Regular';
  background-color: #e6dedc;
}




.container {
max-width: 600px;
display: block;
margin-left: auto;
margin-right: auto;
}

.banner {
  color: rgb(0, 0, 0);
  background-color: #e2e1de;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  padding: 0px;
  text-align: center;
  
  position: fixed;
  z-index: 1;
  width: 100%;

  left: 0px;
  top: -5px;

  


  justify-content: center;

  background: rgba(255, 255, 255, 0.4);
  box-shadow: 0 4px 32px 0 rgb(114, 114, 114);
  backdrop-filter: blur(5px) saturate(100%);
  -webkit-backdrop-filter: blur(5px) saturate(100%);
}

/* Kacheln */
.tile {
  color: rgb(0, 0, 0);
  background-color: #e2e1de;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  padding: 20px;
  text-align: center;
  
  max-width: 700px;
  margin-bottom: 30px;
  margin-left: 20px;
  margin-right: 20px;


  border-radius: 1rem;
  background: rgba(255, 255, 255, 0.4);
  box-shadow: 0 0px 15px 0 rgb(114, 114, 114);
  backdrop-filter: blur(8px) saturate(100%);
  -webkit-backdrop-filter: blur(8px) saturate(100%);

}

/* topics */
.subject {
  font-weight: bold;

}
.topics {
  color: rgb(0, 0, 0);

}
.topics_list{
text-align: left;
margin-left: 10px;

}


/* Seitenanzahl und Preis */
.subject,
.topics,
.pages {
  margin-bottom: 10px;
}

/* Buttons */
.preview-btn {
  border: none;
  color: rgb(0, 0, 0);
  padding: 10px 13px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-family: 'Chirota_Regular';
  font-size: 16px;
  cursor: pointer;

  border-radius: 0.9rem;
  background: #e2e1de;
  box-shadow: 0 0.5px 10px 0 rgba(0, 0, 0, 0.699);
  backdrop-filter: blur(8px) saturate(100%);
  -webkit-backdrop-filter: blur(8px) saturate(100%);
}


.preview-btn:hover {
  background: rgba(0, 0, 0, 0.5);
  color: white
}


.btn_kaufen {
background: #ffffff;


}



.hidden {
  visibility: hidden;
  display: none;
  z-index: -10;
}




.col_1 {
  flex-basis: 50%;
  padding: 10px;
  
}

.col_2 {
  flex-basis: 50%;
  padding: 10px;
}

.col_3 {
  flex-basis: 50%;
  padding: 10px;
}

.col_4 {
  flex-basis: 50%;
  padding: 10px;
}

.col_5 {
  flex-basis: 50%;
  padding: 10px;
}

.col_6 {
  flex-basis: 50%;
  padding: 10px;
}

.col_finderlohn {
  flex-basis: 50%;
  padding: 10px;
}


.red {
color: rgb(209, 0, 0);
}




.durchgestichen {
text-decoration:line-through;
pointer-events: none;
}

















*, *::before, *::after {
box-sizing: border-box;
}

.custom-field {
font-family: 'Chirota_Regular';
position: relative;
font-size: 14px;
border-top: 20px solid transparent;
margin-top: -10px;
margin-bottom: 5px;
display: inline-block;
--field-padding: 12px;
}

.custom-field input {
font-family: 'Chirota_Regular';
text-align: center;

border: none;
-webkit-appearance: none;
-ms-appearance: none;
-moz-appearance: none;
appearance: none;
background: #f2f2f2;
padding: var(--field-padding);
border-radius: 3px;
width: 250px;
outline: none;
font-size: 16px;
}

.custom-field .placeholder {
position: absolute;
left: var(--field-padding);
width: calc(100% - (var(--field-padding) * 2));
overflow: hidden;
white-space: nowrap;
text-overflow: ellipsis;
top: 22px;
line-height: 100%;
transform: translateY(-50%);
color: #aaa;
transition: 
  top 0.3s ease,
  color 0.3s ease,
  font-size 0.3s ease;
}

.custom-field input.dirty + .placeholder,
.custom-field input:focus + .placeholder,
.custom-field input:not(:placeholder-shown) + .placeholder {
top: -10px;
font-size: 10px;
color: #222;
}

.custom-field .error-message {
width: 100%;
display: flex;
align-items: center;
padding: 0 8px;
font-size: 12px;
background: #d30909;
color: #fff;
height: 24px;
}

.custom-field .error-message:empty {
opacity: 0;
}



/* THREE */
.custom-field.three {
--draw-duration: 0.1s;
--draw-color: #222;
--draw-line-width: 2px;
--draw-easing: linear;
}

.custom-field.three .border {
width: 100%;
height: 100%;
position: absolute;
left: 0;
top: 0;
transform: none;
display: flex;
align-items: center;
padding-left: 12px;
border-radius: 3px;
}

.custom-field.three .border::after, 
.custom-field.three .border::before {
content: "";
width: 0;
height: 0;
display: inline-block;
position: absolute;
border-radius: 3px;
}

.custom-field.three .border::before {
left: 0;
bottom: 0;
border-right: 0px solid var(--draw-color);
border-bottom: 0px solid var(--draw-color);
transition: 
  border 0s linear calc(var(--draw-duration) * 4),
  height var(--draw-duration) var(--draw-easing) calc(var(--draw-duration) * 2),
  width var(--draw-duration) var(--draw-easing) calc(var(--draw-duration) * 3);
}

.custom-field.three .border::after {
right: 0;
top: 0;
border-left: 0px solid var(--draw-color);
border-top: 0px solid var(--draw-color);
transition: 
  border 0s linear calc(var(--draw-duration) * 2),
  height var(--draw-duration) var(--draw-easing),
  width var(--draw-duration) var(--draw-easing) var(--draw-duration);
}

.custom-field.three input:focus ~ .border::before,
.custom-field.three input:not(:placeholder-shown) ~ .border::before,
.custom-field.three input.dirty ~ .border::before,
.custom-field.three input:focus ~ .border::after,
.custom-field.three input:not(:placeholder-shown) ~ .border::after,
.custom-field.three input.dirty ~ .border::after {
width: 100%;
height: 100%;
border-width: var(--draw-line-width);
}

.custom-field.three input:not(:placeholder-shown) ~ .border::before,
.custom-field.three input.dirty ~ .border::before,
.custom-field.three input:focus ~ .border::before {
transition-delay: 0s, var(--draw-duration), 0s;
}

.custom-field.three input:not(:placeholder-shown) ~ .border::after,
.custom-field.three input.dirty ~ .border::after,
.custom-field.three input:focus ~ .border::after {
transition-delay: 
  calc(var(--draw-duration) * 2), 
  calc(var(--draw-duration) * 3), 
  calc(var(--draw-duration) * 2);
}